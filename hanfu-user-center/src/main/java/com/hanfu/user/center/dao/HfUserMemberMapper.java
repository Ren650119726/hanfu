package com.hanfu.user.center.dao;

import com.hanfu.user.center.model.HfUserMember;
import com.hanfu.user.center.model.HfUserMemberExample;

import java.time.LocalDateTime;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface HfUserMemberMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table hf_user_member
	 *
	 * @mbg.generated Wed Mar 25 12:06:32 CST 2020
	 */
	long countByExample(HfUserMemberExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table hf_user_member
	 *
	 * @mbg.generated Wed Mar 25 12:06:32 CST 2020
	 */
	int deleteByExample(HfUserMemberExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table hf_user_member
	 *
	 * @mbg.generated Wed Mar 25 12:06:32 CST 2020
	 */
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table hf_user_member
	 *
	 * @mbg.generated Wed Mar 25 12:06:32 CST 2020
	 */
	int insert(HfUserMember record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table hf_user_member
	 *
	 * @mbg.generated Wed Mar 25 12:06:32 CST 2020
	 */
	int insertSelective(HfUserMember record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table hf_user_member
	 *
	 * @mbg.generated Wed Mar 25 12:06:32 CST 2020
	 */
	List<HfUserMember> selectByExample(HfUserMemberExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table hf_user_member
	 *
	 * @mbg.generated Wed Mar 25 12:06:32 CST 2020
	 */
	HfUserMember selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table hf_user_member
	 *
	 * @mbg.generated Wed Mar 25 12:06:32 CST 2020
	 */
	int updateByExampleSelective(@Param("record") HfUserMember record, @Param("example") HfUserMemberExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table hf_user_member
	 *
	 * @mbg.generated Wed Mar 25 12:06:32 CST 2020
	 */
	int updateByExample(@Param("record") HfUserMember record, @Param("example") HfUserMemberExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table hf_user_member
	 *
	 * @mbg.generated Wed Mar 25 12:06:32 CST 2020
	 */
	int updateByPrimaryKeySelective(HfUserMember record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table hf_user_member
	 *
	 * @mbg.generated Wed Mar 25 12:06:32 CST 2020
	 */
	int updateByPrimaryKey(HfUserMember record);

	HfUserMember itExistUserById(@Param("userId") Integer userId);// 判断用户是不是第一次充值会员

	void insertthirtyTime(@Param("userId") Integer userId, @Param("time") LocalDateTime time,
			@Param("thirtyTime") LocalDateTime thirtyTime);

	void insertseasonTime(@Param("userId") Integer userId, @Param("time") LocalDateTime time,
			@Param("seasonTime") LocalDateTime seasonTime);

	void insertyearTime(@Param("userId") Integer userId, @Param("time") LocalDateTime time,
			@Param("yearTime") LocalDateTime yearTime);

	void insertBalance(@Param("userId") Integer userId, @Param("total") Integer total);

	String getModifyTime(@Param("userId") Integer userId);// 判断会员过期没有

	void updateModify(@Param("userId") Integer userId, @Param("time") LocalDateTime time,
			@Param("thirtyTime") LocalDateTime thirtyTime, @Param("seasonTime") LocalDateTime seasonTime,
			@Param("yearTime") LocalDateTime yearTime, @Param("total") Integer total, @Param("money") Integer money,
			@Param("number") Integer number);// 过期重新开通会员的时间

	void updateBalance(@Param("userId") Integer userId, @Param("total") Integer total);// 会员过期重新开通 余额表的余额添加就好

	void updateModifyTime(@Param("userId") Integer userId, @Param("time") LocalDateTime time,
			@Param("thirtyTime") LocalDateTime thirtyTime, @Param("seasonTime") LocalDateTime seasonTime,
			@Param("yearTime") LocalDateTime yearTime, @Param("total") Integer total, @Param("money") Integer money,
			@Param("number") Integer number);// 没过期的会员 直接给他修改过期的日期就可以了

	void buyupdateModify(@Param("userId") Integer userId, @Param("time") LocalDateTime time,
			@Param("thirtyTime") LocalDateTime thirtyTime, @Param("seasonTime") LocalDateTime seasonTime,
			@Param("yearTime") LocalDateTime yearTime, @Param("total") Integer total, @Param("money") Integer money,
			@Param("number") Integer number);// 购买会员 已经过期的 重新设置时间

	void buyupdateModifyTime(@Param("userId") Integer userId, @Param("time") LocalDateTime time,
			@Param("thirtyTime") LocalDateTime thirtyTime, @Param("seasonTime") LocalDateTime seasonTime,
			@Param("yearTime") LocalDateTime yearTime, @Param("total") Integer total, @Param("money") Integer money,
			@Param("number") Integer number);// 购买会员的 没有过期的
}